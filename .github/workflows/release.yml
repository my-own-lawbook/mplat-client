name: Create Release

permissions:
  contents: write

on:
  workflow_dispatch:
    inputs:
      releaseVersion:
        description: The sem-ver of this release
        required: true
        type: string

env:
  SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
  SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
  SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
  SIGNING_STORE_BASE_64: ${{ secrets.SIGNING_STORE_BASE_64 }}

  APK_OUTPUT_DIR: "./composeApp/build/outputs/apk/release/"
  AAB_OUTPUT_DIR: "./composeApp/build/outputs/bundle/release/"
  EXE_OUTPUT_DIR: "./composeApp/build/compose/binaries/main-release/exe/"
  MSI_OUTPUT_DIR: "./composeApp/build/compose/binaries/main-release/msi/"
  DEB_OUTPUT_DIR: "./composeApp/build/compose/binaries/main-release/deb/"

  APK_FILE_NAME: mol.apk
  AAB_FILE_NAME: mol.aab
  EXE_FILE_NAME: mol.exe
  MSI_FILE_NAME: mol.msi
  DEB_FILE_NAME: mol.deb

  APK_ARTIFACT_NAME: Android-Apk
  AAB_ARTIFACT_NAME: Android-Aab
  EXE_ARTIFACT_NAME: Windows-Exe
  MSI_ARTIFACT_NAME: Windows-Msi
  DEB_ARTIFACT_NAME: Debian-Deb

jobs:
  buildAndroid:
    name: Create Android Packages

    runs-on: ubuntu-latest

    steps:

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Create keystore file
        run: |
          echo ${SIGNING_STORE_BASE_64} > release-keystore.jks.base64.txt
          cat release-keystore.jks.base64.txt | base64 -d > release-keystore.jks

      - name: Create APK
        run: |
          ./gradlew assembleRelease
          mv ${{ env.APK_OUTPUT_DIR }}*.apk ${{ env.APK_OUTPUT_DIR }}${{ env.APK_FILE_NAME }}

      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APK_ARTIFACT_NAME }}
          path: ${{ env.APK_OUTPUT_DIR }}${{ env.APK_FILE_NAME }}

      - name: Create AAB
        run: |
          ./gradlew bundleRelease
          mv ${{ env.AAB_OUTPUT_DIR }}*.aab ${{ env.AAB_OUTPUT_DIR }}${{ env.AAB_FILE_NAME }}

      - name: Upload AAB Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.AAB_ARTIFACT_NAME }}
          path: ${{ env.AAB_OUTPUT_DIR }}${{ env.AAB_FILE_NAME }}

  buildWindows:
    name: Create Windows Packages

    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Create EXE
        run: |
          ./gradlew packageReleaseExe
          mv ${{ env.EXE_OUTPUT_DIR }}*.exe ${{ env.EXE_OUTPUT_DIR }}${{ env.EXE_FILE_NAME }}

      - name: Upload EXE Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.EXE_ARTIFACT_NAME }}
          path: ${{ env.EXE_OUTPUT_DIR }}${{ env.EXE_FILE_NAME }}

      - name: Create MSI
        run: |
          ./gradlew packageReleaseMsi
          mv ${{ env.MSI_OUTPUT_DIR }}*.msi ${{ env.MSI_OUTPUT_DIR }}${{ env.MSI_FILE_NAME }}

      - name: Upload MSI Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.MSI_ARTIFACT_NAME }}
          path: ${{ env.MSI_OUTPUT_DIR }}${{ env.MSI_FILE_NAME }}

  buildLinux:
    name: Create Linux Packages

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Create DEB
        run: |
          ./gradlew packageReleaseDeb
          mv ${{ env.DEB_OUTPUT_DIR }}*.deb ${{ env.DEB_OUTPUT_DIR }}${{ env.DEB_FILE_NAME }}

      - name: Upload DEB Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.DEB_ARTIFACT_NAME }}
          path: ${{ env.DEB_OUTPUT_DIR }}${{ env.DEB_FILE_NAME }}

  createRelease:
    name: Create Release

    runs-on: ubuntu-latest
    needs:
      - buildAndroid
      - buildLinux
      - buildWindows

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download APK artifact
        uses: actions/download-artifact@v4
        id: download_apk
        with:
          name: ${{ env.APK_ARTIFACT_NAME }}

      - name: Download AAB artifact
        uses: actions/download-artifact@v4
        id: download_aab
        with:
          name: ${{ env.AAB_ARTIFACT_NAME }}

      - name: Download EXE artifact
        uses: actions/download-artifact@v4
        id: download_exe
        with:
          name: ${{ env.EXE_ARTIFACT_NAME }}

      - name: Download MSI artifact
        uses: actions/download-artifact@v4
        id: download_msi
        with:
          name: ${{ env.MSI_ARTIFACT_NAME }}

      - name: Download DEB artifact
        uses: actions/download-artifact@v4
        id: download_deb
        with:
          name: ${{ env.DEB_ARTIFACT_NAME }}

      - name: Create Tag
        uses: tvdias/github-tagger@v0.0.1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ inputs.releaseVersion }}

      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: my-own-lawbook/mplat-client
          body_path: ./changelogs/${{ inputs.releaseVersion }}.md
          name: ${{ inputs.releaseVersion }}
          tag_name: ${{ inputs.releaseVersion }}
          files: |
            ${{ steps.download_apk.outputs.download-path }}/${{ env.APK_FILE_NAME }}
            ${{ steps.download_aab.outputs.download-path }}/${{ env.AAB_FILE_NAME }}
            ${{ steps.download_exe.outputs.download-path }}/${{ env.EXE_FILE_NAME }}
            ${{ steps.download_msi.outputs.download-path }}/${{ env.MSI_FILE_NAME }}
            ${{ steps.download_deb.outputs.download-path }}/${{ env.DEB_FILE_NAME }}
